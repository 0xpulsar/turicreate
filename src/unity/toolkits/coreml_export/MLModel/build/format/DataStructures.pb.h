/* Copyright Â© 2017 Apple Inc. All rights reserved.
 *
 * Use of this source code is governed by a BSD-3-clause license that can
 * be found in the LICENSE.txt file or at https://opensource.org/licenses/BSD-3-Clause
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataStructures.proto

#ifndef PROTOBUF_DataStructures_2eproto__INCLUDED
#define PROTOBUF_DataStructures_2eproto__INCLUDED

#include <string>

#include <protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <protobuf/arena.h>
#include <protobuf/arenastring.h>
#include <protobuf/generated_message_util.h>
#include <protobuf/message_lite.h>
#include <protobuf/repeated_field.h>
#include <protobuf/extension_set.h>
#include <protobuf/map.h>
#include <protobuf/map_field_lite.h>
#include "FeatureTypes.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_DataStructures_2eproto();
void protobuf_InitDefaults_DataStructures_2eproto();
void protobuf_AssignDesc_DataStructures_2eproto();
void protobuf_ShutdownFile_DataStructures_2eproto();

class DoubleVector;
class Int64ToDoubleMap;
class Int64ToStringMap;
class Int64Vector;
class StringToDoubleMap;
class StringToInt64Map;
class StringVector;

// ===================================================================

class StringToInt64Map : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.StringToInt64Map) */ {
 public:
  StringToInt64Map();
  virtual ~StringToInt64Map();

  StringToInt64Map(const StringToInt64Map& from);

  inline StringToInt64Map& operator=(const StringToInt64Map& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringToInt64Map& default_instance();

  static const StringToInt64Map* internal_default_instance();

  void Swap(StringToInt64Map* other);

  // implements Message ----------------------------------------------

  inline StringToInt64Map* New() const { return New(NULL); }

  StringToInt64Map* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StringToInt64Map& from);
  void MergeFrom(const StringToInt64Map& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringToInt64Map* other);
  void UnsafeMergeFrom(const StringToInt64Map& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, int64> map = 1;
  int map_size() const;
  void clear_map();
  static const int kMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      map() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_map();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.StringToInt64Map)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      StringToInt64Map_MapEntry;
  ::google::protobuf::internal::MapFieldLite<
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > map_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StringToInt64Map> StringToInt64Map_default_instance_;

// -------------------------------------------------------------------

class Int64ToStringMap : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.Int64ToStringMap) */ {
 public:
  Int64ToStringMap();
  virtual ~Int64ToStringMap();

  Int64ToStringMap(const Int64ToStringMap& from);

  inline Int64ToStringMap& operator=(const Int64ToStringMap& from) {
    CopyFrom(from);
    return *this;
  }

  static const Int64ToStringMap& default_instance();

  static const Int64ToStringMap* internal_default_instance();

  void Swap(Int64ToStringMap* other);

  // implements Message ----------------------------------------------

  inline Int64ToStringMap* New() const { return New(NULL); }

  Int64ToStringMap* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Int64ToStringMap& from);
  void MergeFrom(const Int64ToStringMap& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64ToStringMap* other);
  void UnsafeMergeFrom(const Int64ToStringMap& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, string> map = 1;
  int map_size() const;
  void clear_map();
  static const int kMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
      map() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
      mutable_map();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.Int64ToStringMap)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Int64ToStringMap_MapEntry;
  ::google::protobuf::internal::MapFieldLite<
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Int64ToStringMap> Int64ToStringMap_default_instance_;

// -------------------------------------------------------------------

class StringToDoubleMap : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.StringToDoubleMap) */ {
 public:
  StringToDoubleMap();
  virtual ~StringToDoubleMap();

  StringToDoubleMap(const StringToDoubleMap& from);

  inline StringToDoubleMap& operator=(const StringToDoubleMap& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringToDoubleMap& default_instance();

  static const StringToDoubleMap* internal_default_instance();

  void Swap(StringToDoubleMap* other);

  // implements Message ----------------------------------------------

  inline StringToDoubleMap* New() const { return New(NULL); }

  StringToDoubleMap* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StringToDoubleMap& from);
  void MergeFrom(const StringToDoubleMap& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringToDoubleMap* other);
  void UnsafeMergeFrom(const StringToDoubleMap& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, double> map = 1;
  int map_size() const;
  void clear_map();
  static const int kMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, double >&
      map() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_map();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.StringToDoubleMap)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      StringToDoubleMap_MapEntry;
  ::google::protobuf::internal::MapFieldLite<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > map_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StringToDoubleMap> StringToDoubleMap_default_instance_;

// -------------------------------------------------------------------

class Int64ToDoubleMap : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.Int64ToDoubleMap) */ {
 public:
  Int64ToDoubleMap();
  virtual ~Int64ToDoubleMap();

  Int64ToDoubleMap(const Int64ToDoubleMap& from);

  inline Int64ToDoubleMap& operator=(const Int64ToDoubleMap& from) {
    CopyFrom(from);
    return *this;
  }

  static const Int64ToDoubleMap& default_instance();

  static const Int64ToDoubleMap* internal_default_instance();

  void Swap(Int64ToDoubleMap* other);

  // implements Message ----------------------------------------------

  inline Int64ToDoubleMap* New() const { return New(NULL); }

  Int64ToDoubleMap* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Int64ToDoubleMap& from);
  void MergeFrom(const Int64ToDoubleMap& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64ToDoubleMap* other);
  void UnsafeMergeFrom(const Int64ToDoubleMap& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, double> map = 1;
  int map_size() const;
  void clear_map();
  static const int kMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, double >&
      map() const;
  ::google::protobuf::Map< ::google::protobuf::int64, double >*
      mutable_map();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.Int64ToDoubleMap)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      Int64ToDoubleMap_MapEntry;
  ::google::protobuf::internal::MapFieldLite<
      ::google::protobuf::int64, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > map_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Int64ToDoubleMap> Int64ToDoubleMap_default_instance_;

// -------------------------------------------------------------------

class StringVector : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.StringVector) */ {
 public:
  StringVector();
  virtual ~StringVector();

  StringVector(const StringVector& from);

  inline StringVector& operator=(const StringVector& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringVector& default_instance();

  static const StringVector* internal_default_instance();

  void Swap(StringVector* other);

  // implements Message ----------------------------------------------

  inline StringVector* New() const { return New(NULL); }

  StringVector* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StringVector& from);
  void MergeFrom(const StringVector& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringVector* other);
  void UnsafeMergeFrom(const StringVector& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string vector = 1;
  int vector_size() const;
  void clear_vector();
  static const int kVectorFieldNumber = 1;
  const ::std::string& vector(int index) const;
  ::std::string* mutable_vector(int index);
  void set_vector(int index, const ::std::string& value);
  void set_vector(int index, const char* value);
  void set_vector(int index, const char* value, size_t size);
  ::std::string* add_vector();
  void add_vector(const ::std::string& value);
  void add_vector(const char* value);
  void add_vector(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& vector() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_vector();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.StringVector)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::RepeatedPtrField< ::std::string> vector_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StringVector> StringVector_default_instance_;

// -------------------------------------------------------------------

class Int64Vector : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.Int64Vector) */ {
 public:
  Int64Vector();
  virtual ~Int64Vector();

  Int64Vector(const Int64Vector& from);

  inline Int64Vector& operator=(const Int64Vector& from) {
    CopyFrom(from);
    return *this;
  }

  static const Int64Vector& default_instance();

  static const Int64Vector* internal_default_instance();

  void Swap(Int64Vector* other);

  // implements Message ----------------------------------------------

  inline Int64Vector* New() const { return New(NULL); }

  Int64Vector* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Int64Vector& from);
  void MergeFrom(const Int64Vector& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int64Vector* other);
  void UnsafeMergeFrom(const Int64Vector& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 vector = 1;
  int vector_size() const;
  void clear_vector();
  static const int kVectorFieldNumber = 1;
  ::google::protobuf::int64 vector(int index) const;
  void set_vector(int index, ::google::protobuf::int64 value);
  void add_vector(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      vector() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_vector();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.Int64Vector)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > vector_;
  mutable int _vector_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Int64Vector> Int64Vector_default_instance_;

// -------------------------------------------------------------------

class DoubleVector : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.DoubleVector) */ {
 public:
  DoubleVector();
  virtual ~DoubleVector();

  DoubleVector(const DoubleVector& from);

  inline DoubleVector& operator=(const DoubleVector& from) {
    CopyFrom(from);
    return *this;
  }

  static const DoubleVector& default_instance();

  static const DoubleVector* internal_default_instance();

  void Swap(DoubleVector* other);

  // implements Message ----------------------------------------------

  inline DoubleVector* New() const { return New(NULL); }

  DoubleVector* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DoubleVector& from);
  void MergeFrom(const DoubleVector& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleVector* other);
  void UnsafeMergeFrom(const DoubleVector& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double vector = 1;
  int vector_size() const;
  void clear_vector();
  static const int kVectorFieldNumber = 1;
  double vector(int index) const;
  void set_vector(int index, double value);
  void add_vector(double value);
  const ::google::protobuf::RepeatedField< double >&
      vector() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_vector();

  // @@protoc_insertion_point(class_scope:CoreML.Specification.DoubleVector)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::RepeatedField< double > vector_;
  mutable int _vector_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_DataStructures_2eproto_impl();
  friend void  protobuf_AddDesc_DataStructures_2eproto_impl();
  friend void protobuf_AssignDesc_DataStructures_2eproto();
  friend void protobuf_ShutdownFile_DataStructures_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DoubleVector> DoubleVector_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StringToInt64Map

// map<string, int64> map = 1;
inline int StringToInt64Map::map_size() const {
  return map_.size();
}
inline void StringToInt64Map::clear_map() {
  map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
StringToInt64Map::map() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.StringToInt64Map.map)
  return map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
StringToInt64Map::mutable_map() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.StringToInt64Map.map)
  return map_.MutableMap();
}

inline const StringToInt64Map* StringToInt64Map::internal_default_instance() {
  return &StringToInt64Map_default_instance_.get();
}
// -------------------------------------------------------------------

// Int64ToStringMap

// map<int64, string> map = 1;
inline int Int64ToStringMap::map_size() const {
  return map_.size();
}
inline void Int64ToStringMap::clear_map() {
  map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
Int64ToStringMap::map() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.Int64ToStringMap.map)
  return map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
Int64ToStringMap::mutable_map() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.Int64ToStringMap.map)
  return map_.MutableMap();
}

inline const Int64ToStringMap* Int64ToStringMap::internal_default_instance() {
  return &Int64ToStringMap_default_instance_.get();
}
// -------------------------------------------------------------------

// StringToDoubleMap

// map<string, double> map = 1;
inline int StringToDoubleMap::map_size() const {
  return map_.size();
}
inline void StringToDoubleMap::clear_map() {
  map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
StringToDoubleMap::map() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.StringToDoubleMap.map)
  return map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
StringToDoubleMap::mutable_map() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.StringToDoubleMap.map)
  return map_.MutableMap();
}

inline const StringToDoubleMap* StringToDoubleMap::internal_default_instance() {
  return &StringToDoubleMap_default_instance_.get();
}
// -------------------------------------------------------------------

// Int64ToDoubleMap

// map<int64, double> map = 1;
inline int Int64ToDoubleMap::map_size() const {
  return map_.size();
}
inline void Int64ToDoubleMap::clear_map() {
  map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, double >&
Int64ToDoubleMap::map() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.Int64ToDoubleMap.map)
  return map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, double >*
Int64ToDoubleMap::mutable_map() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.Int64ToDoubleMap.map)
  return map_.MutableMap();
}

inline const Int64ToDoubleMap* Int64ToDoubleMap::internal_default_instance() {
  return &Int64ToDoubleMap_default_instance_.get();
}
// -------------------------------------------------------------------

// StringVector

// repeated string vector = 1;
inline int StringVector::vector_size() const {
  return vector_.size();
}
inline void StringVector::clear_vector() {
  vector_.Clear();
}
inline const ::std::string& StringVector::vector(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.StringVector.vector)
  return vector_.Get(index);
}
inline ::std::string* StringVector::mutable_vector(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.StringVector.vector)
  return vector_.Mutable(index);
}
inline void StringVector::set_vector(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.StringVector.vector)
  vector_.Mutable(index)->assign(value);
}
inline void StringVector::set_vector(int index, const char* value) {
  vector_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.StringVector.vector)
}
inline void StringVector::set_vector(int index, const char* value, size_t size) {
  vector_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.StringVector.vector)
}
inline ::std::string* StringVector::add_vector() {
  // @@protoc_insertion_point(field_add_mutable:CoreML.Specification.StringVector.vector)
  return vector_.Add();
}
inline void StringVector::add_vector(const ::std::string& value) {
  vector_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.StringVector.vector)
}
inline void StringVector::add_vector(const char* value) {
  vector_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CoreML.Specification.StringVector.vector)
}
inline void StringVector::add_vector(const char* value, size_t size) {
  vector_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CoreML.Specification.StringVector.vector)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringVector::vector() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.StringVector.vector)
  return vector_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringVector::mutable_vector() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.StringVector.vector)
  return &vector_;
}

inline const StringVector* StringVector::internal_default_instance() {
  return &StringVector_default_instance_.get();
}
// -------------------------------------------------------------------

// Int64Vector

// repeated int64 vector = 1;
inline int Int64Vector::vector_size() const {
  return vector_.size();
}
inline void Int64Vector::clear_vector() {
  vector_.Clear();
}
inline ::google::protobuf::int64 Int64Vector::vector(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.Int64Vector.vector)
  return vector_.Get(index);
}
inline void Int64Vector::set_vector(int index, ::google::protobuf::int64 value) {
  vector_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.Int64Vector.vector)
}
inline void Int64Vector::add_vector(::google::protobuf::int64 value) {
  vector_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.Int64Vector.vector)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64Vector::vector() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.Int64Vector.vector)
  return vector_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64Vector::mutable_vector() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.Int64Vector.vector)
  return &vector_;
}

inline const Int64Vector* Int64Vector::internal_default_instance() {
  return &Int64Vector_default_instance_.get();
}
// -------------------------------------------------------------------

// DoubleVector

// repeated double vector = 1;
inline int DoubleVector::vector_size() const {
  return vector_.size();
}
inline void DoubleVector::clear_vector() {
  vector_.Clear();
}
inline double DoubleVector::vector(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.DoubleVector.vector)
  return vector_.Get(index);
}
inline void DoubleVector::set_vector(int index, double value) {
  vector_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.DoubleVector.vector)
}
inline void DoubleVector::add_vector(double value) {
  vector_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.DoubleVector.vector)
}
inline const ::google::protobuf::RepeatedField< double >&
DoubleVector::vector() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.DoubleVector.vector)
  return vector_;
}
inline ::google::protobuf::RepeatedField< double >*
DoubleVector::mutable_vector() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.DoubleVector.vector)
  return &vector_;
}

inline const DoubleVector* DoubleVector::internal_default_instance() {
  return &DoubleVector_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataStructures_2eproto__INCLUDED
